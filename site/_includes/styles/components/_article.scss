@mixin fancy-block($bg, $fg) {
   align-self: start;
   padding: {
      left: 0.5em;
      right: 0.5em;
   }
   width: 100%;
   color: $fg;
   background: $bg;
}

@mixin extra-vertical($top: ms(-4), $bottom: ms(-4)) {
   padding-top: $top;
   padding-bottom: $bottom;
}

@mixin pull-left($border-color: transparent) {
   --pull-width: 2px;
   width: calc(100% + 1em + var(--pull-width));
   border-left: {
      style: solid;
      width: var(--pull-width);
   }
   margin: {
      left: calc(-1 * (calc(0.5em + var(--pull-width))));
      bottom: ms(0);
   }
}

.content-block {
   --max-width: 32rem;
   font-feature-settings: 'liga', 'onum', 'pnum', 'kern';

   aside,
   .note,
   .callout {
      &::before {
         display: block;
         text-align: center;
         margin: ms(-8) 0 ms(-8) -#{ms(-4)};
         font: {
            family: var(--sans);
            weight: bold;
            size: calc(var(--sans-adjust) * #{ms(-2)});
         }
         text-transform: uppercase;
         letter-spacing: 2pt;
         color: var(--aside-marker-fg);
      }

      code {
         background-color: var(--aside-code-bg);
      }
   }

   aside,
   .note,
   .assumed-audience,
   .callout {
      font: {
         family: var(--sans);
         size: calc(var(--sans-adjust) * #{ms(0)});
      }

      margin: {
         left: -3px;
         bottom: ms(0);
      }

      border-top: 2px solid var(--top-border);
   }

   aside {
      @include fancy-block(var(--aside-bg), var(--aside-fg));
      @include extra-vertical();
      --top-border: var(--aside-border);

      &::before {
         content: '—/ Aside /—';
      }
   }

   .callout {
      @include fancy-block(var(--aside-bg), var(--aside-fg));
      @include extra-vertical($bottom: ms(-3)); // balances better
      --top-border: var(--aside-border);

      &::before {
         display: none;
      }
   }

   .assumed-audience {
      @include fancy-block(var(--aside-bg), var(--aside-fg));
      @include extra-vertical();
      --top-border: var(--aside-border);

      display: block;
      margin: {
         left: auto;
         right: auto;
      }
   }

   .note {
      @include fancy-block(var(--note-bg), var(--note-fg));
      @include extra-vertical();
      --top-border: var(--note-accent);

      &::before {
         content: '—/ Note /—';
         color: var(--note-accent);
      }
   }

   a {
      -webkit-text-decoration-color: var(--underline);
      -moz-text-decoration-color: var(--underline);
      text-decoration-color: var(--underline);
      text-decoration-skip-ink: auto;

      transition: -webkit-text-decoration-color var(--transition),
         -moz-text-decoration-color var(--transition),
         text-decoration-color var(--transition), color var(--transition);

      &:hover {
         -webkit-text-decoration-color: var(--hover-underline);
         -moz-text-decoration-color: var(--hover-underline);
         text-decoration-color: var(--hover-underline);
      }
   }

   hr {
      margin-bottom: ms(0);
   }

   figure {
      margin-bottom: 1em;

      figcaption {
         text-align: center;
         margin: auto;
         font: {
            family: var(--sans);
            size: calc(var(--sans-adjust) * #{ms(0)});
         }
         color: var(--figure-fg);
      }
   }

   sup {
      line-height: 0;
      vertical-align: 0.558em;

      font: {
         family: var(--sans);
         weight: bold;
         size: ms(-2);
         feature-settings: 'onum' 0;
      }

      &.footnote-ref a {
         display: inline-block;

         text-decoration: none;
         transition: all var(--transition);
      }
   }

   .footnotes {
      font-size: calc(var(--fs-base) - 2px);
      width: 100%;
      max-width: var(--max-width);
   }
}

.article-content {
   display: flex;
   flex-direction: column;
   align-items: center;
   margin-left: auto;
   margin-right: auto;

   h1,
   h2,
   h3,
   h4,
   h5,
   h6 {
      width: 100%;
      max-width: var(--max-width);
      text-align: left;

      .section-link {
         text-decoration: none;
         text-align: left;
         transition: color var(--transition);
         position: relative;

         .__marker {
            background-color: currentColor;
            transition: all var(--transition);
            display: inline-block;
            width: 1rem;
            height: 2px;
            position: absolute;
            left: 0;
            bottom: -0.5em;
         }

         &:hover,
         &:active {
            color: currentColor;

            .__marker {
               width: 100%;
               background-color: var(--link);
            }
         }
      }
   }

   h1 {
      font: {
         family: var(--sans);
         size: ms(3);
         weight: bold;
      }

      margin: ms(0) 0;
      text-transform: uppercase;
      letter-spacing: 1px;
      background: var(--bg);
      display: flex;
      align-items: center;
      justify-content: center;
      width: 100%;
      max-width: var(--max-width);
      text-align: center;

      .section-link {
         color: var(--h1-fg);

         .__marker {
            width: 2em;
            left: calc(50% - 1em);
         }

         &:hover,
         &:active {
            .__marker {
               left: 0;
            }
         }
      }
   }

   h2 {
      font: {
         family: var(--sans);
         size: ms(1);
         weight: bold;
      }
      text-transform: uppercase;
      letter-spacing: 1px;
      margin: ms(2) 0 1em;

      .section-link {
         color: var(--h2-fg);
      }
   }

   h3 {
      font: {
         family: var(--sans);
         size: calc(var(--sans-adjust) * #{ms(1)});
         weight: bold;
      }
      margin: ms(-3) 0 ms(-1);

      .section-link {
         color: var(--h3-fg);
      }
   }

   h4 {
      font: {
         family: var(--sans);
         size: calc(var(--sans-adjust) * #{ms(1)});
      }

      margin-bottom: ms(-5);
      // padding-bottom: ms(-5);

      .section-link {
         color: var(--h4-fg);

         .__marker {
            bottom: -#{ms(-8)};
         }
      }
   }

   h5 {
      font: {
         family: var(--sans);
         size: calc(var(--sans-adjust) * #{ms(0)});
         weight: bold;
      }

      margin-bottom: ms(-7);

      .section-link {
         color: var(--h5-fg);
         text-decoration: underline;
         text-decoration-color: transparent;

         .__marker {
            bottom: -#{ms(-9)};
         }
      }
   }

   h6 {
      font: {
         family: var(--sans);
         size: calc(var(--sans-adjust) * #{ms(0)});
         style: italic;
      }

      margin-bottom: ms(-7);

      .section-link {
         color: var(--h6-fg);
         text-decoration: underline;
         text-decoration-color: transparent;

         .__marker {
            bottom: -#{ms(-9)};
         }
      }
   }

   h3 + h4, h4 + h5, h5 + h6 {
      margin-top: 1rem;
   }

   ul,
   ol {
      width: 100%;
      max-width: 32rem;
      padding-left: ms(2);
      margin-bottom: ms(0);
   }

   // This is a slightly ridiculoud implementation, but it actually does what I
   // want: all list items have their normal margins, *except* those at the end
   // of a list. When the item is the terminal item in a list, it drops that
   // padding. This works for nested lists because in that case, the parent list
   // container, `ul` or `ol`, will have its own margin which only gets cleared
   // when *it* is the final such item in the list.
   li {
      &:last-child > {
         p,
         ol,
         ul {
            &:last-child {
               margin-bottom: 0;
            }
         }
      }

      p:last-child {
         margin-bottom: 1em;
      }
   }

   ol {
      list-style: decimal;
      font-feature-settings: 'onum' 0;
   }

   ul {
      list-style: circle;
   }

   p {
      width: 100%;
      max-width: var(--max-width);
      margin: 0 0 ms(0);
      padding: 0;
   }

   img {
      width: 100%;
   }

   blockquote {
      --double-margin: 0.35em;
      --single-margin: 0.2em;
      --border-width: 3px;

      font: {
         family: var(--sans);
         size: calc(var(--sans-adjust) * #{ms(0)});
      }
      @include fancy-block(var(--bg), var(--fg));
      @include pull-left();
      border-left-color: var(--blockquote-border);

      padding-top: 1.5px;
   }

   // As with list items (above), `blockquote` and `aside` children should have
   // their normal margins *except* when terminating the container, so that they
   // do not cause visual disparities between top and bottom.
   blockquote,
   aside,
   .note,
   .assumed-audience,
   .callout {
      > {
         p,
         ul,
         ol {
            &:last-child {
               margin-bottom: 0;
            }
         }
      }
   }

   code {
      font: {
         family: var(--mono);
         size: ms(-2);
      }
      background: var(--code-bg);
      padding: ms(-8) ms(-4);
      color: var(--code-fg);
   }

   pre {
      @include fancy-block(var(--code-bg), var(--code-fg));
      @include extra-vertical();
      @include pull-left();
      border-left-color: var(--code-border);

      background: var(--code-bg);
      color: var(--code-fg);
      margin-bottom: 1em;

      code {
         display: block;
         overflow-x: auto;
         width: 100%;
         margin: 0;
         padding: 0;
         line-height: ms(2);
         font-size: ms(-2);
         -webkit-font-smoothing: antialiased;
      }
   }
}

@media screen {
   @media (min-width: 32.6667rem) {
      .content-block {
         --side-padding: #{ms(-1)};
         --fancy-width: calc(var(--max-width) + calc(2 * var(--side-padding)));

         blockquote,
         pre,
         aside,
         .assumed-audience,
         .note,
         .callout {
            max-width: var(--fancy-width);
            align-self: center;
            padding: {
               left: var(--side-padding);
               right: var(--side-padding);
            }
         }

         .article-content h1 {
            max-width: var(--fancy-width);
         }
      }
   }

   @media (min-width: $resize) {
      .content-block {
         --fancy-width: calc(var(--max-width) + 2.5rem);

         .assumed-audience {
            padding-left: ms(0);
         }

         .article-content {
            blockquote,
            pre,
            aside,
            .note,
            .callout {
               margin-left: ms(-4);
               padding-left: ms(0);
            }
         }
      }
   }

   @media (min-width: $reflow) {
      .content-block {
         padding-bottom: ms(3);

         figure {
            max-width: 90%;
         }
      }
   }
}
